<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ðŸ‘‹ Jorge Niedbalski</title>
    <link>http://niedbalski.dev/posts/</link>
    <description>Recent content in Posts on ðŸ‘‹ Jorge Niedbalski</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2023</copyright>
    <lastBuildDate>Sat, 25 Feb 2023 14:40:16 +0200</lastBuildDate><atom:link href="http://niedbalski.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Writing Golang Fluent Bit Input Plugins</title>
      <link>http://niedbalski.dev/posts/writing-golang-fluent-bit-input-plugins/</link>
      <pubDate>Sat, 25 Feb 2023 14:40:16 +0200</pubDate>
      
      <guid>http://niedbalski.dev/posts/writing-golang-fluent-bit-input-plugins/</guid>
      <description>Writing Golang Fluent Bit Input Plugins Introduction Welcome to this guide on writing Golang input plugins for Fluent Bit! In this document, we will walk you through the process of creating an extensible plugin interface for Fluent Bit input using Golang. This will allow you to easily extend Fluent Bit&amp;rsquo;s capabilities and integrate custom functionality into your data processing pipeline.
Context Fluent Bit is a highly reliable and memory-efficient pipeline data processing engine.</description>
    </item>
    
  </channel>
</rss>
